<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Blog</title><link>https://immatt2015.github.io/</link><description>Recent content on My Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 Jun 2020 03:09:51 -0500</lastBuildDate><atom:link href="https://immatt2015.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Git</title><link>https://immatt2015.github.io/2020/06/git/</link><pubDate>Sun, 28 Jun 2020 03:09:51 -0500</pubDate><guid>https://immatt2015.github.io/2020/06/git/</guid><description>获取当前 commit 的 hash
git rev-parse --verify HEAD</description></item><item><title>饥荒</title><link>https://immatt2015.github.io/2020/06/%E9%A5%A5%E8%8D%92/</link><pubDate>Sun, 28 Jun 2020 03:09:51 -0500</pubDate><guid>https://immatt2015.github.io/2020/06/%E9%A5%A5%E8%8D%92/</guid><description>饥荒终于存货了 500 day 了。
!(/images/wl.pngp)[]</description></item><item><title>Lua Module</title><link>https://immatt2015.github.io/2020/06/lua-module/</link><pubDate>Tue, 02 Jun 2020 22:56:50 +0700</pubDate><guid>https://immatt2015.github.io/2020/06/lua-module/</guid><description>local module = {}; module.xxx = xxx; functionn module.xxx () -- todo end return module; Lua 模块被 require 之后， 只会运行一次并进行缓存</description></item><item><title>Lua FFI 调用 golang</title><link>https://immatt2015.github.io/2020/05/lua-ffi-%E8%B0%83%E7%94%A8-golang/</link><pubDate>Thu, 28 May 2020 22:57:31 +0700</pubDate><guid>https://immatt2015.github.io/2020/05/lua-ffi-%E8%B0%83%E7%94%A8-golang/</guid><description>安装 LuaRocks, 参考openresty 官方 wget http://luarocks.org/releases/luarocks-2.0.13.tar.gz tar -xzvf luarocks-2.0.13.tar.gz cd luarocks-2.0.13/ ./configure --prefix=/usr/local/openresty/luajit \ --with-lua=/usr/local/openresty/luajit/ \ --lua-suffix=jit \ --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 make sudo make install 安装 lua2go sudo /usr/local/openresty/luajit/luarocks install --server=https://luarocks.org/dev lua2go 通过 lua2go 调用 golang dll local lua2go = require(&amp;#39;lua2go&amp;#39;) local xxx = lua2go.Load(&amp;#39;./xxx.so&amp;#39;) lua2go.Externs([ extern char* captcha(xxx) ]) 试用这个ffi 模块，可能多次调用 lua2go.Externs 函数,导致内存泄漏；最好包装成lua module
安装 LuaRocks, 参考openresty 官方 wget http://luarocks.org/releases/luarocks-2.0.13.tar.gz tar -xzvf luarocks-2.0.13.tar.gz cd luarocks-2.0.13/ ./configure --prefix=/usr/local/openresty/luajit \ --with-lua=/usr/local/openresty/luajit/ \ --lua-suffix=jit \ --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.</description></item><item><title>OpenVPN 部署以及在 openwrt 上搭透明代理</title><link>https://immatt2015.github.io/2020/05/openvpn-%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8A%E5%9C%A8-openwrt-%E4%B8%8A%E6%90%AD%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/</link><pubDate>Thu, 28 May 2020 22:42:11 +0700</pubDate><guid>https://immatt2015.github.io/2020/05/openvpn-%E9%83%A8%E7%BD%B2%E4%BB%A5%E5%8F%8A%E5%9C%A8-openwrt-%E4%B8%8A%E6%90%AD%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/</guid><description>本文主要介绍的是 openvpn 部署过程 以及在 openwrt 搞透明全局代理
vps 系统类型： Centos7
vps 主要执行：
安装 openvpn 并设置 打开ipv4数据包转发 防火墙允许包转发 添加用户 服务器 添加EPEL源, 并执行更新
yum install epel-release -y &amp;amp;&amp;amp; yum update -y &amp;amp;&amp;amp; yum upgrade -y 安装openvpn 以及 工具
yum -y install openvpn easy-rsa 生成密钥 复制配置文件 cd /usr/share/easy-rsa/3 cp /usr/share/doc/easy-rsa-${ easy-rsa 版本号 }/vars.example vars
修改 var 项目
#set_var EASYRSA_REQ_COUNTRY &amp;quot;US&amp;quot; #set_var EASYRSA_REQ_PROVINCE &amp;quot;California&amp;quot; #set_var EASYRSA_REQ_CITY &amp;quot;San Francisco&amp;quot; #set_var EASYRSA_REQ_ORG &amp;quot;Copyleft Certificate Co&amp;quot; #set_var EASYRSA_REQ_EMAIL &amp;quot;me@example.</description></item><item><title>Openresty GeoIp 使用</title><link>https://immatt2015.github.io/2020/05/openresty-geoip-%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 28 May 2020 13:41:57 +0700</pubDate><guid>https://immatt2015.github.io/2020/05/openresty-geoip-%E4%BD%BF%E7%94%A8/</guid><description>安装过程:
到 maxmind 站点注册个账号 vps 安装 yum install libmaxminddb libmaxminddb-devel perl-Digest-MD5 安装 openresty 第三方包 opm get anjia0532/lua-resty-maxminddb openresty 配置文件, 进行初始化 init_by_lua_block { local geo = require 'resty.maxminddb' if not geo.initted() then geo.init(&amp;quot;$GeoLite2.mmdb 路径&amp;quot;) end } 可以在其他的 lua 执行节点使用 local geo = require 'resty.maxminddb' local res, err = geo.lookup($ip) 免费库精准度一般； 测试发现很大的误差·······</description></item><item><title>Trojan部署</title><link>https://immatt2015.github.io/2020/05/trojan%E9%83%A8%E7%BD%B2/</link><pubDate>Thu, 28 May 2020 13:41:46 +0700</pubDate><guid>https://immatt2015.github.io/2020/05/trojan%E9%83%A8%E7%BD%B2/</guid><description>Trojan 搭建只要分为4步.
准备VPS， 并装好 openresty/nginx， 开放端口 80， 443； 准备一个域名 https 证书 使用 trojan 域名 域名可以使用免费域名 dynu ddns, 注册一下， 然后到对应界面添加一个域名。
证书 参考 www.jouypub.com 可以使用 Let’s Encrypt 免费证书。 使用 certbot 签发免费证书，centos7 为例子:
安装 certbot
yum install certbot 创建好对应目录
cd /usr/local/openresty/nginx/html/; mkdir .well-known // openresty 默认路径 在 nginx 80端口设置好 well-know 访问路径
location /.well-known/ { root /usr/local/openresty/nginx/html; } 使用certbot 签发证书, 会提示邮箱地址，这个随意填</description></item><item><title>为 Nginx/Openresty 添加 nginx Njs</title><link>https://immatt2015.github.io/2020/05/%E4%B8%BA-nginx/openresty-%E6%B7%BB%E5%8A%A0-nginx-njs/</link><pubDate>Wed, 27 May 2020 13:41:12 +0700</pubDate><guid>https://immatt2015.github.io/2020/05/%E4%B8%BA-nginx/openresty-%E6%B7%BB%E5%8A%A0-nginx-njs/</guid><description>njs 是可以 javascrip 编写 nginx 处理逻辑。
njs 可以通过编译成 dynamic module 添加到 nginx/openresty ；
编译的过程:
到 http://hg.nginx.org/njs 下载 njs 代码; 进入 nginx/openrety 的源码目录 ./configurate --add-dynamical-module=/xxxx/njs_root_path/nginx ，参数为 njs 源码目录下的 nginx 目录的绝对路径 在 nginx/openresty 源码根路径下执行 make 第4步执行完后， 执行 make install 在 nginx.conf 下配置 njs 动态模块; nginx.conf worker_processes 1; load_module /usr/local/openresty/nginx/modules/ngx_http_js_module.so; # openrety 默认路径 events { worker_connections 1024; } http { js_include http.js; server { listen 80; error_log /usr/local/openresty/nginx/logs/e.log; location / { js_content foo; } } } /usr/local/openresty/nginx/conf/http.</description></item><item><title>About</title><link>https://immatt2015.github.io/about/</link><pubDate>Wed, 09 Oct 2019 12:13:32 +0200</pubDate><guid>https://immatt2015.github.io/about/</guid><description/></item></channel></rss>